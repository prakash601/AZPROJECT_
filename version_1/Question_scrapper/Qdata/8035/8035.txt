Lisa loves playing with the sequences of integers. When she gets a new integer sequence
ai
of length
n
, she starts looking for all monotone subsequences. A monotone subsequence
[l,r]
is defined by two indices
l
and
r
(
1≤l<r≤n
) such that
∀i=l,l+1,…,r−1:ai≤ai+1
or
∀i=l,l+1,…,r−1:ai≥ai+1
.
Lisa considers a sequence
ai
to be boring if there is a monotone subsequence
[l,r]
that is as long as her boredom threshold
k
, that is when
r−l+1=k
.
Lucas has a sequence
bi
that he wants to present to Lisa, but the sequence might be boring for Lisa. So, he wants to change some elements of his sequence
bi
, so that Lisa does not get bored playing with it. However, Lucas is lazy and wants to change as few elements of the sequence
bi
as possible. Your task is to help Lucas find the required changes.
Input
The first line of the input contains two integers
n
and
k
(
3≤k≤n≤106
) — the length of the sequence and Lisa's boredom threshold. The second line contains
n
integers
bi
(
1≤bi≤99999
) — the original sequence that Lucas has.
Output
On the first line output an integer
m
 — the minimal number of elements in
bi
that needs to be changed to make the sequence not boring for Lisa. On the second line output
n
integers
ai
(
0≤ai≤100000
), so that the sequence of integers
ai
is not boring for Lisa and is different from the original sequence
bi
in exactly
m
positions.
Examples
input
Copy
5 3
1 2 3 4 5
output
Copy
2
1 0 3 0 5
input
Copy
6 3
1 1 1 1 1 1
output
Copy
3
1 100000 0 1 0 1
input
Copy
6 4
1 1 4 4 1 1
output
Copy
1
1 1 4 0 1 1
input
Copy
6 4
4 4 4 2 2 2
output
Copy
2
4 4 0 2 0 2
input
Copy
6 4
4 4 4 3 4 4
output
Copy
1
4 4 100000 3 4 4
input
Copy
8 4
2 1 1 3 3 1 1 2
output
Copy
2
2 1 1 3 0 1 0 2
input
Copy
10 4
1 1 1 2 2 1 1 2 2 1
output
Copy
2
1 1 100000 2 2 100000 1 2 2 1
input
Copy
7 5
5 4 4 3 4 4 4
output
Copy
0
5 4 4 3 4 4 4
input
Copy
10 10
1 1 1 1 1 1 1 1 1 1
output
Copy
1
1 1 1 1 1 1 1 1 0 1