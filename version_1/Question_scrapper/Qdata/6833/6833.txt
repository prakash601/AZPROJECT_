You are given a tree with
N nodes (numbered
1 through
N) and
N−1 edges. Each node has a value; let's denote the value of node
x by
W
x
.
Next, let's define the value of a simple path
v
1
,v
2
,…,v
k
as
∑
i=1
k
i⋅W
v
i
. A simple path in a tree is a sequence of nodes
v
1
,v
2
,…,v
k
such that:
k≥1
there is an edge between nodes
v
i
and
v
i+1
for each
i (
1≤i≤k−1)
v
i

=v
j
for each
i,j (
1≤i,j≤k) such that
i

=j
You should find the maximum of values of all simple paths in the given tree.
Input
The first line of the input contains a single integer
T denoting the number of test cases. The description of
T test cases follows.
The first line of each test case contains a single integer
N.
The second line contains
N space-separated integers
W
1
,W
2
,…,W
N
.
Each of the following
N−1 lines contains two space-separated integers
u and
v denoting an edge between nodes
u and
v.
Output
For each test case, print a single line containing one integer — the maximum value of a simple path.
Constraints
2≤N≤50,000
the sum of
N over all test cases does not exceed
400,000
1≤u,v≤N
u

=v
∣W
i
∣≤1,000 for each valid
i
the graph described in the input is a tree
Subtasks
Subtask #1 (30 points): the tree is a binary tree rooted at node 1
Subtask #2 (30 points):
the length (number of nodes) of any simple path in the tree is at most
200
the sum of
N over all test cases does not exceed
100,000
Subtask #3 (40 points): original constraints
Sample 1:
Input
Output
3
5
1 2 3 4 5
1 2
2 3
3 4
3 5
2
-1 -1
1 2
3
1 1000 -30
1 3
2 3
34
-1
2941