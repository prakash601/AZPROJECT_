Arya has a pet mouse named Jack. She put Jack in a grid with
N rows (numbered
1 through
N) and
M columns (numbered
1 through
M). There are
K cheese wedges scattered over the grid; for each wedge, we know how long it takes Jack to eat it.
Let's denote the cell in row
r and column
c by
(r,c). Initially, Jack is in the cell
(1,1). When Jack is in a cell
(r,c), he can move to either of the cells
(r,c−1) or
(r,c+1) in
1 second. If he is in the first or last column of the grid (
c=1 or
c=M), he can also move to the cell
(r+1,c) in
1 second. Jack can only eat a cheese wedge if he is in the same cell as the wedge.
Your task is to help Jack find out, for each possible
, the minimum number of seconds Jack needs to eat
i cheese wedges.
Input
The first line of the input contains a single integer
T denoting the number of test cases. The description of
T test cases follows.
The first line of each test case contains three space-separated integers
N,
M and
K.
K lines follow. Each of these lines contains three space-separated integers
r,
c and
t, denoting that there is a cheese wedge in cell
(r,c) and it takes Jack
t seconds to eat it.
Output
For each test case, print a single line containing
K space-separated integers. For each
i (
1≤i≤K), the
i-th of them should denote the minimum number of seconds Jack needs to eat
i cheese wedges.
Constraints
1≤T≤1,000
3≤N,M≤10
9
1≤K≤10
4
1≤r≤N
2≤c≤M−1
1≤t≤10
9
no two cheese wedges are in the same cell
the sum of
K over all test cases does not exceed
10
4
Subtasks
Subtask #1 (25 points):
1≤T≤10
N,M,K≤300
Subtask #2 (75 points): original constraints
Sample 1:
Input
Output
1
3 10 5
1 2 10
2 2 1
1 3 1
1 9 1 
2 9 1
3 8 14 22 32