Given an array arr[] of N integers. Do the following operation n-1 times. For every Kth operation:
Right rotate the array clockwise by 1.
Delete the (n-k+1)th last element.
Now, find the element which is left at last.
Example:
Input:
2
4
1 2 3 4
6
1 2 3 4 5 6

Output:
2
3

Explanation:
A = {1, 2, 3, 4, 5, 6}. Rotate the array clockwise i.e. after rotation the array A = {6, 1, 2, 3, 4, 5} and delete the last element that is {5} that will be A = {6, 1, 2, 3, 4}.
Again rotate the array for the second time and deletes the second last element that is {2} that will be
A = {4, 6, 1, 3}, doing these steps when he reaches 4th time, 4th last element does not exist. Then he deletes 1st element ie {1} that will be A={3, 6}. So, continuing this procedure the last element in A is {3}.
So, the output will be 3.
Input:
The first line of input contains an integer T denoting the number of test cases. Then T test cases follow. Each test case contains two lines. The first line of each test case contains an integer N. Then in the next line are N space separated values of the array arr[].
  Output:
For each test case in a new line print the required result.
Your task:
The task is to complete the function rotateDelete() which does operations as per the given query.
Constraints:
1 <= T <= 110
1 <= N <= 106
1 <= A[i] <= 107