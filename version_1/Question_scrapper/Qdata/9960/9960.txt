This is the easy version of the problem. The difference between the versions is that the easy version has no swap operations. You can make hacks only if all versions of the problem are solved.
Pikachu is a cute and friendly pokémon living in the wild pikachu herd.
But it has become known recently that infamous team R wanted to steal all these pokémon! Pokémon trainer Andrew decided to help Pikachu to build a pokémon army to resist.
First, Andrew counted all the pokémon — there were exactly
n
pikachu. The strength of the
i
-th pokémon is equal to
ai
, and all these numbers are distinct.
As an army, Andrew can choose any non-empty subsequence of pokemons. In other words, Andrew chooses some array
b
from
k
indices such that
1≤b1<b2<⋯<bk≤n
, and his army will consist of pokémons with forces
ab1,ab2,…,abk
.
The strength of the army is equal to the alternating sum of elements of the subsequence; that is,
ab1−ab2+ab3−ab4+…
.
Andrew is experimenting with pokémon order. He performs
q
operations. In
i
-th operation Andrew swaps
li
-th and
ri
-th pokémon.
Note:
q=0
in this version of the task.
Andrew wants to know the maximal stregth of the army he can achieve with the initial pokémon placement. He also needs to know the maximal strength after each operation.
Help Andrew and the pokémon, or team R will realize their tricky plan!
Input
Each test contains multiple test cases.
The first line contains one positive integer
t
(
1≤t≤103
) denoting the number of test cases. Description of the test cases follows.
The first line of each test case contains two integers
n
and
q
(
1≤n≤3⋅105,q=0
) denoting the number of pokémon and number of operations respectively.
The second line contains
n
distinct positive integers
a1,a2,…,an
(
1≤ai≤n
) denoting the strengths of the pokémon.
i
-th of the last
q
lines contains two positive integers
li
and
ri
(
1≤li≤ri≤n
) denoting the indices of pokémon that were swapped in the
i
-th operation.
It is guaranteed that the sum of
n
over all test cases does not exceed
3⋅105
, and the sum of
q
over all test cases does not exceed
3⋅105
.
Output
For each test case, print
q+1
integers: the maximal strength of army before the swaps and after each swap.
Example
input
Copy
3
3 0
1 3 2
2 0
1 2
7 0
1 2 5 4 3 6 7
output
Copy
3
2
9
Note
In third test case we can build an army in such way: [1 2 5 4 3 6 7], its strength will be
5−3+7=9
.