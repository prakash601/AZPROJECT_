You are given a tree with
N vertices (numbered
1 through
N). Its edges are numbered
1 through
N−1. For each valid
i, there is an integer
a
i
written on the
i-th vertex. Also, for each valid
i, there is an integer
b
i
written on the
i-th edge.
You want the following condition to be satisfied: for each vertex
v and each edge
e adjacent to
v,
a
v
≥b
e
. In order to achieve that, you may perform an arbitrary number of steps (including zero). In one step, you may perform one the following operations:
Select two different vertices
u and
v. Swap
a
and
a
.
Select two different edges
e and
f. Swap
b
e
and
b
f
.
Select a vertex
v and an integer
x. Change
a
v
to
x and pay one coin.
Calculate the minimum number of coins you need in order to satisfy the required condition.
Input
The first line of the input contains a single integer
T denoting the number of test cases. The description of
T test cases follows.
The first line of each test case contains a single integer
N.
N−1 lines follow. For each
i (
1≤i≤N−1), the
i-th of these lines contains three space-separated integers
u
i
,
v
i
and
b
i
denoting that the
i-th edge connects vertices
u
i
and
v
i
and the initial value written on it is
b
i
.
The last line contains
N space-separated integers
a
1
,a
2
,…,a
N
.
Output
For each test case, print a single line containing one integer ― the minimum necessary number of coins.
Constraints
1≤T≤10
2≤N≤100,000
1≤u
i
,v
i
≤N for each valid
i
1≤b
i
≤10
9
for each valid
i
1≤a
i
≤10
9
for each valid
i
the graph on the input is a tree
Subtasks
Subtask #1 (10 points):
N≤7
Subtask #2 (10 points):
N≤10
Subtask #3 (30 points):
N≤200
Subtask #4 (50 points): original constraints
Sample 1:
Input
Output
1
3
1 2 4
2 3 7
1 5 10
1
Explanation:
Example case 1: There is no way to satisfy the required condition without paying any coins. When we have one coin, we can perform the following operations:
Swap the integers written on vertices
1 and
2.
Pay one coin and change the integer written on vertex
2 to
7.