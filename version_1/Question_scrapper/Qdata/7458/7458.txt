Problem description.
You are given a convex polygon of n vertices P1, P2, ..., Pn (in counter-clock or clock order). Each vertex is assigned with a weight wi.
Find a subset of vertices that includes vertex 1.
1 = i1 < i2 < ... < ik ≤ n that maximizes ratio:
(dist(i1, i2) + dist(i2, i3) + ... + dist(ik, i1)) / (wi1 + wi2 + ... + wik).
Where dist(i, j) refers to Euclidean distance between two points Pi, Pj.
  Input
The first line contains an integer T denotes the number of test cases. Each test case is describes as follow:
An integer n on a single line.
n next lines, each line contains two integers, that is coordinates of i-th vertex
The last line contains n space-seperated integer, denotes weight of vertex.
  Output
Each testcase output the maximum ratio can reach on a single line.
Your answer will be considered correct if it has an absolute error less then 10-6.
  Constraints
1 ≤ T ≤ 10
3 ≤ n ≤ 105
The sum of n over all test cases is at most 2.105
0 ≤ all coordinates ≤ 109
1 ≤ wi ≤ 105
Subtask:
Subtask #1 (10 points): n ≤ 15
Subtask #2 (30 points): n ≤ 1000
Subtask #3 (60 points): original constrains
  Sample 1:
Input
Output
3
3
0 0
1 5
2 9
4 4 20
4
0 0
1 5
2 7
3 6
12 15 12 11
5
0 0
1 5
2 8
3 9
4 8
12 11 18 2 7
1.274754878
0.606675824
1.355261854