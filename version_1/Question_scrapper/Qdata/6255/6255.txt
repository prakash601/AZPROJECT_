Chef's brother Chefu is a competitive programmer. Every day, he practices for ICPC (International Chefs' Programming Contest) by solving problems. Today, Chef challenged his brother to solve a certain problem, promising to bake an apple pie for him if he succeeds. Chefu has successfully solved the problem, but can you solve it?
You are given an integer sequence
A
1
,A
2
,…,A
N
. In one move, you must select two adjacent elements of this sequence (i.e.
A
i
and
A
i+1
for some valid
i) and swap them. Let's call a sequence orderly if it contains a contiguous subsequence with length at least
K such that all of its elements have identical values. Find the minimum number of moves required to make the given sequence orderly or determine that it is impossible.
Input
The first line of the input contains a single integer
T denoting the number of test cases. The description of
T test cases follows.
The first line of each test case contains two space-separated integers
N and
K.
The second line contains
N space-separated integers
A
1
,A
2
,…,A
N
.
Output
For each test case, print a single line containing one integer — the minimum required number of moves, or
−1 if it is impossible to make the sequence orderly.
Constraints
1≤T≤1,000
2≤K≤N≤300,000
1≤A
i
≤300,000 for each valid
i
the sum of
N over all test cases does not exceed
10
6
Subtasks
Subtask #1 (30 points):
N≤100
the sum of
N over all test cases does not exceed
1,000
Subtask #2 (70 points): original constraints
Sample 1:
Input
Output
2
8 3
1 2 2 1 3 3 2 1
5 3
1 1 2 2 3
3
-1