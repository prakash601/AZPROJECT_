Let
LCP(s,t)
be the length of the longest common prefix of strings
s
and
t
. Also let
s[x…y]
be the substring of
s
from index
x
to index
y
(inclusive). For example, if
s=
"abcde", then
s[1…3]=
"abc",
s[2…5]=
"bcde".
You are given a string
s
of length
n
and
q
queries. Each query is a pair of integer sets
a1,a2,…,ak
and
b1,b2,…,bl
. Calculate
i=k
∑
i=1
j=l
∑
j=1
LCP(s[ai…n],s[bj…n])
for each query.
Input
The first line contains two integers
n
and
q
(
1≤n,q≤2⋅105
) — the length of string
s
and the number of queries, respectively.
The second line contains a string
s
consisting of lowercase Latin letters (
|s|=n
).
Next
3q
lines contains descriptions of queries — three lines per query. The first line of each query contains two integers
ki
and
li
(
1≤ki,li≤n
) — sizes of sets
a
and
b
respectively.
The second line of each query contains
ki
integers
a1,a2,…aki
(
1≤a1<a2<⋯<aki≤n
) — set
a
.
The third line of each query contains
li
integers
b1,b2,…bli
(
1≤b1<b2<⋯<bli≤n
) — set
b
.
It is guaranteed that
i=q
∑
i=1
ki≤2⋅105
and
i=q
∑
i=1
li≤2⋅105
.
Output
Print
q
integers — answers for the queries in the same order queries are given in the input.
Example
input
Copy
7 4
abacaba
2 2
1 2
1 2
3 1
1 2 3
7
1 7
1
1 2 3 4 5 6 7
2 2
1 5
1 5
output
Copy
13
2
12
16
Note
Description of queries:
In the first query
s[1…7]=abacaba
and
s[2…7]=bacaba
are considered. The answer for the query is
LCP(abacaba,abacaba)+LCP(abacaba,bacaba)+LCP(bacaba,abacaba)+LCP(bacaba,bacaba)=7+0+0+6=13
.
In the second query
s[1…7]=abacaba
,
s[2…7]=bacaba
,
s[3…7]=acaba
and
s[7…7]=a
are considered. The answer for the query is
LCP(abacaba,a)+LCP(bacaba,a)+LCP(acaba,a)=1+0+1=2
.
In the third query
s[1…7]=abacaba
are compared with all suffixes. The answer is the sum of non-zero values:
LCP(abacaba,abacaba)+LCP(abacaba,acaba)+LCP(abacaba,aba)+LCP(abacaba,a)=7+1+3+1=12
.
In the fourth query
s[1…7]=abacaba
and
s[5…7]=aba
are considered. The answer for the query is
LCP(abacaba,abacaba)+LCP(abacaba,aba)+LCP(aba,abacaba)+LCP(aba,aba)=7+3+3+3=16
.