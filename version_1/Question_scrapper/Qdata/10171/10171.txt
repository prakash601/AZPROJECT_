Easy and hard versions are actually different problems, so read statements of both problems completely and carefully.
Summer vacation has started so Alice and Bob want to play and joy, but... Their mom doesn't think so. She says that they have to read exactly
m
books before all entertainments. Alice and Bob will read each book together to end this exercise faster.
There are
n
books in the family library. The
i
-th book is described by three integers:
ti
— the amount of time Alice and Bob need to spend to read it,
ai
(equals
1
if Alice likes the
i
-th book and
0
if not), and
bi
(equals
1
if Bob likes the
i
-th book and
0
if not).
So they need to choose exactly
m
books from the given
n
books in such a way that:
Alice likes at least
k
books from the chosen set and Bob likes at least
k
books from the chosen set;
the total reading time of these
m
books is minimized (they are children and want to play and joy as soon a possible).
The set they choose is the same for both Alice an Bob (it's shared between them) and they read all books together, so the total reading time is the sum of
ti
over all books that are in the chosen set.
Your task is to help them and find any suitable set of books or determine that it is impossible to find such a set.
Input
The first line of the input contains three integers
n
,
m
and
k
(
1≤k≤m≤n≤2⋅105
).
The next
n
lines contain descriptions of books, one description per line: the
i
-th line contains three integers
ti
,
ai
and
bi
(
1≤ti≤104
,
0≤ai,bi≤1
), where:
ti
— the amount of time required for reading the
i
-th book;
ai
equals
1
if Alice likes the
i
-th book and
0
otherwise;
bi
equals
1
if Bob likes the
i
-th book and
0
otherwise.
Output
If there is no solution, print only one integer -1.
If the solution exists, print
T
in the first line — the minimum total reading time of the suitable set of books. In the second line print
m
distinct integers from
1
to
n
in any order — indices of books which are in the set you found.
If there are several answers, print any of them.
Examples
input
Copy
6 3 1
6 0 0
11 1 0
9 0 1
21 1 1
10 1 0
8 0 1
output
Copy
24
6 5 1 
input
Copy
6 3 2
6 0 0
11 1 0
9 0 1
21 1 1
10 1 0
8 0 1
output
Copy
39
4 6 5 