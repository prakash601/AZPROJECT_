A string consisting only of parentheses ('(' and ')') is called a bracket sequence. Some bracket sequence are called correct bracket sequences(CBS). More formally:
Empty string is a CBS.
If S is a CBS, then (S) is also a CBS.
If S and T are CBS, then ST (concatenation of S and T) is also a CBS.
A 'good' CBS is a sequence where the first (N/2) characters are '(' and the next (N/2) characters are ')',where N is the length of sequence.
You are given two numbers N and K. Find the probability that a N length CBS can be converted into a 'good' CBS by at most K 'good' swaps. A swap is 'good' if the sequence after the swap is a CBS.
If the answer is of the form P/Q where P and Q are coprime, print (P*Q-1) modulo 1000000007.
Input Format:
The first line contains an integer T, the number of test cases. Next T lines contains two space separated integers N, K.
Output Format:
For each test case, output the corresponding answer in a separate line.
Constraints:
1<=T<=20
1<=N<=100000
0<=K<=100000
N is even.
Sample Input:
1
8 1
Sample Output:
714285720
Explanation:
Correct Bracket sequences for n = 8:
1. (((())))
2. ((()()))
3. (()(()))
4. ()((()))
5. ((())())
6. (()()())
7. ()(()())
8. (())(())
9. ()()(())
10. ((()))()
11. (()())()
12. ()(())()
13. (())()()
14. ()()()()
In 3, the 3rd and 5th characters can be swapped to form a good CBS since it is a good swap.
Similarly 1,2,4,5,6,7,10,11,12 can also be converted to good CBS.
Thus the probability is 10/14.