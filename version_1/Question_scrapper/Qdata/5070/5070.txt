You are given an array
A consisting of
N non-negative integers.
It is guaranteed that
A contains at least two distinct elements.
You are also given a non-negative integer
X.
For each
Y
(0≤Y≤X), we create an array
B of size
N such that
B
i
=A
i
∣Y, where
∣ denotes the bitwise OR operation.
Find the largest integer
Y(Y≤X) such that the array
B contains at least two distinct elements.
Input Format
The first line of input contains a single integer
T, denoting the number of test cases.
Each test case consists of two lines of input.
The first line of each test case contains two integers
N and
X — the length of the array
A and maximum value of
Y allowed.
The second line of each test case contains
N space-separated integers
A
1
,A
2
,…,A
N
, representing the array
A.
Output Format
For each test case, output on a new line, the largest
Y satisfying the condition.
Constraints
1≤T≤10
5
2≤N≤10
5
0≤A
i
,X<2
30
The sum of
N over all test cases won't exceed
2⋅10
5
.
Sample 1:
Input
Output
3
3 5
1 1 2
5 10
4 5 2 3 5
3 3
1 1 3
5
10
1
Explanation:
Test case
1: For
Y=5,
B=[1∣5,1∣5,2∣5]=[5,5,7], which has
2 distinct elements.
Thus, this is the largest value of
Y.
Test case
2: For
Y=10,
B=[4∣10,5∣10,2∣10,3∣10,5∣10]=[14,15,10,11,15], which has
4 distinct elements.
Thus, this is the largest value of
Y.
Test case
3: For
Y=1,
B=[1∣1,1∣1,3∣1]=[1,1,3], which has
2 distinct elements.
For
Y=2,
B=[1∣2,1∣2,3∣2]=[3,3,3], which has
1 distinct element only.