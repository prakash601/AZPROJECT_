For an array
B, while it has more than one element, you can apply an operation on it - you choose any two elements
x,y (they may be the same value, but they should have different indices), delete them, and add an element
g(x,y) instead.
Here
g(x,y) denotes the highest set bit in
x⊕y, or
0 if they are equal. In other words,
g(x,y)=max2
k
, such that
2
k
≤(x⊕y) for
x

=y, and
g(x,y)=0 if
x=y. For example,
g(1,1)=0,g(1,2)=2,g(2,4)=4,g(13,17)=16.
Given an array
B, we try to apply the operations repeatedly in such a way that when we are left with only one element at the end, that element is as small as possible. Let's denote this smallest possible value of the element at the end as
f(B).
You are given an array
A with
N elements, you need to find the sum of
f(A
l…r
) among all subsegments
1≤l≤r≤N.
The answer may be large, so you need to find it modulo
998244353.
###Input:
The first line contains one integer
N.
The second line contains
N integers
A
1
,A
2
,…,A
N
.
###Output: In a single line, print the sum, modulo
998244353.
###Constraints
1≤N≤300000
0≤A
i
<2
30
###Subtasks
10 points :
1≤N≤10
10 points :
1≤N≤500
10 points :
1≤N≤5000
70 points :
1≤N≤300000
Sample 1:
Input
Output
10 
0 1 2 3 4 5 6 7 8 9
160