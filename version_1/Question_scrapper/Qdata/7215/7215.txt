There are
N nodes where the
i
th
node has the following values associated to it:
Weight: Each node has a distinct weight
W
i
. The value
W
i
is given in the input.
Support: Each node has a support value
S
i
. The value
S
i
is given in the input.
Key: The key for the
i
th
node is defined as
K
i
=S
i
+ΣW
j
, where the
j
th
node is a descendant node of the
i
th
node.
Note:
Descendant node: If a node
C is a child of
P, then
C is a descendant of
P. If a node
C is a child of a descendant of
P, then
C is a descendant of
P. Note that a node is not a descendant of itself.
Binary search tree: A binary tree is called a binary search tree, if, for every node
X, having the left child
L and the right child
R (if they exist),
W
L
<W
X
<W
R
.
Your task is to form a binary search tree with
N nodes, such that, the value
max
i=1
N
(K
i
) is minimum.
In other words, you need to minimise the maximum value of the key of any node.
Output the maximum key in the formed binary search tree.
Input Format
The first line contains an integer
N — the number of nodes.
The next line contains
N space-separated integers
W
i
, denoting the weight of node
i.
The next line contains
N space-separated integers
S
i
, denoting the support value of node
i.
Output Format
Output on a new line, the maximum key in the formed binary search tree.
Constraints
1≤N≤10
5
1≤W
i
,S
i
≤10
9
.
The value
W
i
is distinct
Sample 1:
Input
Output
4
1 2 3 4
4 3 2 1
7
Explanation:
Consider the following BST:
Here, the key of the nodes are:
K
1
=S
1
=4.
K
2
=S
2
+W
1
+W
3
=3+1+3=7.
K
3
=S
3
=2.
K
4
=S
4
+W
1
+W
2
+W
3
=1+1+2+3=7.
Thus, the maximum key is
7. It can be shown that there exists no binary search tree with maximum key less than
7.
Sample 2:
Input
Output
5
1 2 3 4 5
20 21 10 20 10
22
Sample 3:
Input
Output
6
952936228 979876854 986572948 957923235 903104456 920786644
909208950 921719860 961315817 981037233 945025254 948909455
5643043371