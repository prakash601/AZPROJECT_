You are given an array
A=[A
1
,A
2
,…,A
N
] consisting of
N positive integers.
You are also given a constant
K, using which you can perform the following operation on
A:
Choose two distinct indices
i and
j such that
A
i
+A
j
≤K, and remove either
A
i
or
A
j
from
A.
Is it possible to obtain an array consisting of only one element using several (possibly, zero) such operations?
Input Format
The first line of input contains a single integer
T, denoting the number of test cases. The description of
T test cases follows.
The first line of each test case contains two space-separated integers
N and
K.
The second line contains
N space-separated integers
A
1
,A
2
,…,A
N
.
Output Format
For each test case, print "YES" if it is possible to obtain an array consisting of only one element using the given operation, otherwise print "NO".
You may print each character of the string in uppercase or lowercase (for example, the strings "yEs", "yes", "Yes" and "YES" will all be treated as identical).
Constraints
1≤T≤10
3
1≤N≤10
5
1≤A
i
,K≤10
9
Sum of
N over all test cases does not exceed
2⋅10
5
Sample 1:
Input
Output
3
1 3
1
3 3
2 2 2
4 7
1 4 3 5
YES
NO
YES
Explanation:
Test case
1: The length of the array is already
1.
Test case
2: There is no way to delete an element from the given array.
Test case
3: One possible sequence of operations is:
Choose
i=1,j=4 and remove
A
j
=5. Hence the array becomes
[1,4,3].
Choose
i=2,j=3 and remove
A
i
=4. Hence the array becomes
[1,3].
Choose
i=1,j=2 and remove
A
i
=1. Hence the array becomes
[3], which is of length
1.