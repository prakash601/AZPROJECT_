You are given a tree that has n vertices, which are numbered from 1 to n, where the vertex number one is the root. Each edge has weight wi and strength pi.
Botanist Innokentiy, who is the only member of the jury of the Olympiad in Informatics, doesn't like broken trees.
The tree is broken if there is such an edge the strength of which is less than the sum of weight of subtree's edges to which it leads.
It is allowed to reduce weight of any edge by arbitrary integer value, but then the strength of its edge is reduced by the same value. It means if the weight of the edge is 10, and the strength is 12, then by the reducing the weight by 7 its weight will equal 3, and the strength will equal 5.
It is not allowed to increase the weight of the edge.
Your task is to get the tree, which is not broken, by reducing the weight of edges of the given tree, and also all edged should have the positive weight, moreover, the total weight of all edges should be as large as possible.
It is obvious that the strength of edges can not be negative, however it can equal zero if the weight of the subtree equals zero.
Input
The first line contains the integer n (1 ≤ n ≤ 2·105) — the number of vertices in the tree. The next n - 1 lines contains the description of edges. Each line contains four integers x, y, w, p (1 ≤ x, y ≤ n, 1 ≤ w ≤ 109, 0 ≤ p ≤ 109), where x and y — vertices which connect the edge (the vertex number x is the parent of the vertex number y), w and p are the weight and the strength of the edge, accordingly. It is guaranteed that the edges describe the tree with the root in the vertex 1.
Output
If it is impossible to get unbroken tree from the given tree, print -1 in the only line.
Otherwise, the output data should contain n lines:
In the first line print the number n — the number of vertices on the tree.
In the next n - 1 lines print the description of edges of the resulting tree. Each line should contain four integers x, y, w, p (1 ≤ x, y ≤ n, 1 ≤ w ≤ 109, 0 ≤ p ≤ 109), where x and y — vertices, which the edge connects (the vertex number x is the parent of the vertex number y), w and p are the new weight and the strength of the edge, accordingly.
Print edges in the same order as they are given in input data: the first two integers of each line should not be changed.
Examples
input
Copy
3
1 3 5 7
3 2 4 3
output
Copy
3
1 3 5 7
3 2 4 3
input
Copy
4
1 3 2 3
3 4 5 1
3 2 3 3
output
Copy
-1
input
Copy
5
1 2 2 4
2 4 1 9
4 5 5 6
4 3 4 8
output
Copy
5
1 2 2 4
2 4 1 9
4 5 1 2
4 3 2 6
input
Copy
7
1 2 5 2
2 3 4 3
1 4 3 7
4 5 4 1
4 6 3 2
6 7 1 6
output
Copy
7
1 2 5 2
2 3 2 1
1 4 3 7
4 5 3 0
4 6 3 2
6 7 1 6