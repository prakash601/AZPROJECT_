It is the hard version of the problem. The only difference is that in this version
ai≤109
.
You are given an array of
n
integers
a0,a1,a2,…an−1
. Bryap wants to find the longest beautiful subsequence in the array.
An array
b=[b0,b1,…,bm−1]
, where
0≤b0<b1<…<bm−1<n
, is a subsequence of length
m
of the array
a
.
Subsequence
b=[b0,b1,…,bm−1]
of length
m
is called beautiful, if the following condition holds:
For any
p
(
0≤p<m−1
) holds:
abp⊕bp+1<abp+1⊕bp
.
Here
a⊕b
denotes the bitwise XOR of
a
and
b
. For example,
2⊕4=6
and
3⊕1=2
.
Bryap is a simple person so he only wants to know the length of the longest such subsequence. Help Bryap and find the answer to his question.
Input
The first line contains a single integer
t
(
1≤t≤105
)  — the number of test cases. The description of the test cases follows.
The first line of each test case contains a single integer
n
(
2≤n≤3⋅105
) — the length of the array.
The second line of each test case contains
n
integers
a0,a1,...,an−1
(
0≤ai≤109
) — the elements of the array.
It is guaranteed that the sum of
n
over all test cases does not exceed
3⋅105
.
Output
For each test case print a single integer — the length of the longest beautiful subsequence.
Example
input
Copy
3
2
1 2
5
5 2 4 3 1
10
3 8 8 2 9 1 6 2 8 3
output
Copy
2
3
6
Note
In the first test case, we can pick the whole array as a beautiful subsequence because
1⊕1<2⊕0
.
In the second test case, we can pick elements with indexes
1
,
2
and
4
(in
0
indexation). For this elements holds:
2⊕2<4⊕1
and
4⊕4<1⊕2
.