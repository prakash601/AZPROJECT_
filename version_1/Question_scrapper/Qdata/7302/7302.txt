You are given
N segments where each segment is of the form
[L
i
,R
i
]
(1≤L
i
≤R
i
≤N).
It is ensured that for any two segments
X and
Y, one of the following conditions hold true:
X∩Y=X,
X∩Y=Y, or
X∩Y=∅ (empty set)
Note that
∩ denotes the intersection of segments.
In other words, for any two segments, either one is completely inside the other or they are completely disjoint.
The
i
segment
iN is assigned a value
V
i
.
A subset
S={S
1
,S
2
,…,S
k
} having
k segments is considered good if there exists an integer array
B of size
k such that:
All elements of the array
B are distinct.
B
i
lies in the segment
S
i
.
Let the score of a good subset be defined as the sum of values of all segments of the subset. Find the maximum score of a good subset.
Input Format
The first line of input contains a single integer
T - the number of test cases. The description of
T test cases follow.
The first line of each test case contains integers
N - the number of segments.
Each of the next
N lines contains three integers
L
i
,R
i
, and
V
i
, describing the
i
th
segment.
Output Format
For each test case, output the maximum score of a good subset.
Constraints
1≤T≤10
5
1≤N≤10
5
1≤L
i
≤R
i
≤N
1≤V
i
≤10
9
Sum of
N over all test cases does not exceed
3⋅10
5
.
Sample 1:
Input
Output
2
4
2 2 5
2 2 10
3 3 14
3 3 20
4
1 3 4
2 3 5
1 1 10
1 4 13
30
32
Explanation:
Test case
1: A possible value of good subset is
S=[A
2
,A
4
]. The array
B=[2,3] such that
2 lies in the segment
A
2
and
3 lies in the segment
A
4
. The sum of values of all segments of
S is
10+20=30.
It can be proven that the score of a good subset does not exceed
30 in this case.
Test case
2: We can take
S=[A
1
,A
2
,A
3
,A
4
]. The array
B=[2,3,1,4].
For segment
A
1
,
L=1 and
R=3. Here
L
1
≤2≤R
1
.
For segment
A
2
,
L=2 and
R=3. Here
L
2
≤3≤R
2
.
For segment
A
3
,
L=1 and
R=1. Here
L
3
≤1≤R
3
.
For segment
A
4
,
L=1 and
R=4. Here
L
4
≤4≤R
4
.
The sum of scores of all segments of
S is
4+5+10+13=32. It can be proven that the score of a good subset does not exceed
4+5+10+13=32 in this case.