Bakry got bored of solving problems related to xor, so he asked you to solve this problem for him.
You are given an array
a
of
n
integers
[a1,a2,…,an]
.
Let's call a subarray
al,al+1,al+2,…,ar
good if
al&al+1&al+2…&ar>al⊕al+1⊕al+2…⊕ar
, where
⊕
denotes the bitwise XOR operation and
&
denotes the bitwise AND operation.
Find the length of the longest good subarray of
a
, or determine that no such subarray exists.
Input
The first line contains a single integer
n
(
1≤n≤106
) — the length of the array.
The second line contains
n
integers
a1,a2,…,an
(
1≤ai≤106
) — elements of the array.
Output
Print a single integer — the length of the longest good subarray. If there are no good subarrays, print
0
.
Examples
input
Copy
2
5 6
output
Copy
2
input
Copy
3
2 4 3
output
Copy
0
input
Copy
6
8 1 3 3 1 2
output
Copy
4
Note
In the first case, the answer is
2
, as the whole array is good:
5&6=4>5⊕6=3
.
In the third case, the answer is
4
, and one of the longest good subarrays is
[a2,a3,a4,a5]
:
1&3&3&1=1>1⊕3⊕3⊕1=0
.