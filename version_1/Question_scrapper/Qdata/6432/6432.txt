Chef comes across a very interesting problem.
He has an array
A of length
N, and his task is to delete some elements from the array to make the array good.
An array is termed good if:
The length of the array is even;
Let the length of the array
A after some (possibly zero) deletions be
M, where
M is even.
Then,
A
1
+A
2
=A
3
+A
4
=…=A
M−1
+A
M
should hold true.
Help Chef find the minimum number of deletions to make the array good.
Input Format
The first line of input will contain a single integer
T, denoting the number of test cases.
Each test case consists of multiple lines of input.
The first line of each test case contains a single integer
N, the length of the array.
The next line contains
N space separated integers representing the initial elements in the array.
Output Format
For each test case, output on a new line, the minimum number of deletions Chef has to perform in order to make the array good.
Constraints
1≤T≤500
1≤N≤2000
1≤A
i
≤10
9
The sum of
N over all test cases does not exceed
2000.
Sample 1:
Input
Output
2
6
1 2 1 1 2 1 
6
1 1 1 1 1 1
2
0
Explanation:
Test case
1: The given array has length
6 which is even, but
A
1
+A
2
=3 is not equal to
A
3
+A
4
=2.
To make the array good, Chef can delete elements at indices
3 and
6.
Then, we are left with array
[1,2,1,2]. Here,
A
1
+A
2
=A
3
+A
4
=3.
It can be shown that we cannot make the array good in less than
2 deletions.
Test case
2: The given array has length
6 and
A
1
+A
2
=A
3
+A
4
=A
5
+A
6
=2.
Thus, the array is good and we do not require any operations.