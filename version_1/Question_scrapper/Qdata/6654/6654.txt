You are given two integer sequences
A
1
,A
2
,…,A
N
and
B
1
,B
2
,…,B
N
.
We define the similarity of the sequences
A and
B as the number of indices
i such that
A
i
=B
i
.
You should process
Q queries. In each query, you are given parameters
l,
r and
c; you should change each of the elements
A
l
,A
l+1
,…,A
r
to
c, and then compute the similarity of the sequences
A and
B.
Chef knows that this is simple, so he asks you to answer the queries online. Note that the input is given in a special format to ensure that.
Input
The first line of the input contains a single integer
T denoting the number of test cases. The description of
T test cases follows.
The first line of each test case contains two space-separated integers
N and
Q.
The second line contains
N space-separated integers
A
1
,A
2
,…,A
N
.
The third line contains
N space-separated integers
B
1
,B
2
,…,B
N
.
Each of the next
Q lines contains three space-separated integers
x,
y and
z describing a query in the following format:
Let's denote the similarity of
A and
B before this query by
P
r
(for the first query,
P
r
is the similarity of the initial sequences).
For this query,
l=x⊕P
r
,
r=y⊕P
r
and
c=z⊕P
r
.
Output
For each query, print a single line containing one integer — the similarity after this query.
Constraints
1≤T≤5
1≤N,Q≤10
5
1≤A
i
,B
i
≤10
9
for each valid
i
1≤c≤10
9
1≤l≤r≤N
Subtasks
Subtask 1 (20 points):
1≤N,Q≤2,000
Subtask 2 (80 points): original constraints
Sample 1:
Input
Output
1
4 3
1 2 3 4
1 1 3 5
0 1 0
0 5 3
1 4 1
1
0
2
Explanation:
Example case 1: The similarity before any query is applied is
2 (the sequences match at positions
1 and
3).
In the first query,
l=2,
r=3,
c=2. The similarity after this query is
1 (the only match is at position
1).
In the second query,
l=1,
r=4,
c=2. The similarity after this query is
0 (no match at any position).
In the third query,
l=1,
r=4,
c=1. The similarity after this query is
2 (two matches at positions
1 and
2).