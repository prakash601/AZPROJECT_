If I keep moving, they won't know | I'll morph to someone else | What they throw at me's too slow | I'll morph to someone else | I'm just a ghost | I'll morph to someone else | Defense mechanism mode!
You are given two integer sequences
A
1
,A
2
,…,A
N
and
B
1
,B
2
,…,B
N
and an integer
K. You may perform the following operation at most
3⋅N times:
Select a contiguous subsequence of
A with length
K. Let's denote this subsequence by
A
L
,A
L+1
,…,A
L+K−1
.
Create an integer sequence
S
,S
,…,S
which is isomorphic to the selected subsequence ― for each pair of integers
i and
j (
1≤i,j≤K),
S
i
=S
j
must hold if
A
L−1+i
=A
L−1+j
and
S
i

=S
j
must hold if
A
L−1+i

=A
L−1+j
. In addition,
1≤S
i
≤1,000 must hold for each valid
i.
For each valid
i, replace
A
L−1+i
by
S
i
.
Is it possible to change the sequence
A to
B? If it is possible, find a sequence of operations which morphs
A to
B.
Input
The first line of the input contains a single integer
T denoting the number of test cases. The description of
T test cases follows.
The first line of each test case contains two space-separated integers
N and
K.
The second line contains
N space-separated integers
A
1
,A
2
,…,A
N
.
The third line contains
N space-separated integers
B
1
,B
2
,…,B
N
.
Output
For each test case:
If it is impossible to morph
A to
B using no more than
3⋅N operations, print a single line containing the string "NO" (without quotes).
Otherwise, start by printing a line containing the string "YES" (without quotes).
Then, print a line containing a single integer
P (
0≤P≤3⋅N) ― the number of operations you want to perform.
Finally, print
P lines. Each of these lines should contain
K+1 space-separated integers
L,S
1
,S
2
,…,S
K
describing an operation (
1≤L≤N−K+1;
1≤S
i
≤1,000 for each valid
i).
If there are multiple solutions, you may find any one of them.
Constraints
1≤T≤100
1≤K≤N≤100
1≤A
i
,B
i
≤1,000 for each valid
i
Example Input
4
4 3
1 2 3 4
4 3 2 1
7 5
2 1 2 1 1 3 2
5 4 1 5 4 3 9 
6 4 
1 1 5 4 3 6
5 3 4 5 1 1
3 1
1 1 1
9 10 21
Example Output
YES
2
1 4 3 2
2 3 2 1
NO
YES
3
2 3 4 1 6
1 5 3 4 5
3 4 5 1 1
YES
3
1 9
2 10
3 21
Explanation
Example case 1: The state of the sequence after each operation is
[1,2,3,4]→[4,3,2,4]→[4,3,2,1].
Example case 3: The state of the sequence after each operation is
[1,1,5,4,3,6]→[1,3,4,1,6,6]→[5,3,4,5,6,6]→[5,3,4,5,1,1].
See the following animation for more clarity: