To prove that writing graduate work is important, you decided to invent some interesting problem connected to it:
You are given a weighted complete undirected graph on
N nodes. For every pair of vertices
(i,j) with
1≤i<j≤N there is an edge with weight
D⋅∣i−j∣+c
ij
between them, with
0≤c
ij
<D (remember, that graph is undirected, so there will be edge with such weight in both sides).
You need to solve the travelling salesman problem on this graph. In other words, you need to find the length of the shortest possible route that visits each node exactly once and returns to the origin node.
Input Format
The first line contains one integer
T
− the number of test cases. The description of test cases follows.
The first line of each test case contains two integers
N,D.
The
i-th of the next
N−1 lines contains
N−i integers
c
i,i+1
,…,c
i,N
.
Output Format
For each test case print a single integer
− the length of the shortest possible route that visits each city exactly once and returns to the origin city.
Constraints
1≤T≤2000
2≤N≤2000
2≤D≤1000
0≤c
ij
<D
The sum of
N over all test cases doesn't exceed
2000.
Sample 1:
Input
Output
2
4 3
0 0 2
2 0
0
5 4
2 0 0 3
1 2 0
3 3
1
18
38
Explanation:
In the first test case, one of the possible shortest routes is
(1,3,4,2,1).
In the second test case, one of the possible shortest routes is
(3,4,5,2,1,3).