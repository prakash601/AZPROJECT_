Chef is given a tree of N nodes. Let M denote the number of simple paths with at least two nodes. Notice that M = N * (N - 1) / 2.
There are (M * (M - 1) * (M - 2) / 6) unordered triples of such paths. Your task is to count how many of them are nice. A triple of paths (A, B, C) is nice if and only if either of the following conditions is satisfied:
The three paths are pairwise disjoint (no two of them share a node).
Each pair of paths intersect with each other. In other words: paths A and B share at least one node, paths A and C share at least one node, and also paths B and C share at least one node.
Output the number of nice triples of paths modulo (109+7).
Input
The first line of the input contains an integer N.
Each of the next N-1 lines contains two integers ai and bi denoting an edge between nodes ai and bi.
Output</h3>
Output a single integer, denoting the number of nice triples of paths modulo (109+7).
Constraints
1 ≤ N ≤ 3*105
1 ≤ ai, bi ≤ N
ai ≠ bi
Subtasks
Subtask 1 (15 points):
1 ≤ N ≤ 2000

Subtask 2 (57 points):
1 ≤ N ≤ 105

Subtask 3 (28 points):
Original constraints.
Example
Input 1:
4
1 2
2 3
3 4
Output 1:
16
Input 2:
13
1 2
1 3
1 4
2 5
2 6
3 7
4 8
7 9
9 10
10 11
11 12
12 13
Output 2:
43484
Explanation</h3>

<b>Example test 1.</b> Let (<b>x</b>, <b>y</b>) denote the simple path between nodes <b>x</b> and <b>y</b>. There are <b>16</b> nice triples of paths:
(1, 2), (1, 3), (1, 4)
(1, 2), (1, 3), (2, 3)
(1, 2), (1, 3), (2, 4)
(1, 2), (1, 4), (2, 3)
(1, 2), (1, 4), (2, 4)
(1, 2), (2, 3), (2, 4)
(1, 3), (1, 4), (2, 3)
(1, 3), (1, 4), (2, 4)
(1, 3), (1, 4), (3, 4)
(1, 3), (2, 3), (2, 4)
(1, 3), (2, 3), (3, 4)
(1, 3), (2, 4), (3, 4)
(1, 4), (2, 3), (2, 4)
(1, 4), (2, 3), (3, 4)
(1, 4), (2, 4), (3, 4)
(2, 3), (2, 4), (3, 4)

Example test 2. The triple {(1, 5), (3, 7), (9, 13)} is one of the 43484 nice triples of paths.