You are given a sequence of non-negative integers
A
1
,A
2
,…,A
N
and
Q queries. A sequence is good if the bitwise AND of all its elements is a perfect square. In each query:
you are given two parameters
L and
R
consider the subsequence
B=A
L
,A
L+1
,…,A
R
you should find the number of good contiguous subsequences of
B
Input
The first line of the input contains a single integer
T denoting the number of test cases. The description of
test cases follows.
The first line of each test case contains two space-separated integers
N and
Q.
The second line contains
N space-separated integers
A
1
,A
2
,…,A
N
.
Each of the following
Q lines contains two space-separated integers
L and
R describing one query.
Output
For each query, print a single line containing one integer — the number of good contiguous subsequences.
Constraints
1≤T≤1,000
1≤N≤10
5
0≤A
i
<2
30
for each valid
i
1≤Q≤5⋅10
5
1≤L≤R≤N
the sum of
N over all test cases does not exceed
10
5
the sum of
Q over all test cases does not exceed
5⋅10
5
Subtasks
Subtask #1 (30 points):
the sum of
N over all test cases does not exceed
100
the sum of
Q over all test cases does not exceed
100
Subtask #2 (70 points): original constraints
Sample 1:
Input
Output
1
3 2
1 2 3
2 2
1 3
0
3
Explanation:
Example case 1: For the first query, there is only one possible subsequence,
[2]. The AND of its elements is equal to its only element
2, which is not a perfect square.
For the second query, there are six contiguous subsequences:
[1]; its AND is 1, a perfect square
[1,2]; its AND is 0, a perfect square
[1,2,3]; its AND is 0, a perfect square
[2]; its AND is 2, not a perfect square
[2,3]; its AND is 2, not a perfect square
[3]; its AND is 3, not a perfect square