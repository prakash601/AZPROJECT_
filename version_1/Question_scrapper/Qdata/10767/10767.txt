You are given two sets of integers:
A
and
B
. You need to output the sum of elements in the set
C={x|x=a⊕b,a∈A,b∈B}
modulo
998244353
, where
⊕
denotes the bitwise XOR operation. Each number should be counted only once.
For example, if
A={2,3}
and
B={2,3}
you should count integer
1
only once, despite the fact that you can get it as
3⊕2
and as
2⊕3
. So the answer for this case is equal to
1+0=1
.
Let's call a segment
[l;r]
a set of integers
{l,l+1,…,r}
.
The set
A
is given as a union of
nA
segments, the set
B
is given as a union of
nB
segments.
Input
The first line contains a single integer
nA
(
1≤nA≤100
).
The
i
-th of the next
nA
lines contains two integers
li
and
ri
(
1≤li≤ri≤1018
), describing a segment of values of set
A
.
The next line contains a single integer
nB
(
1≤nB≤100
).
The
i
-th of the next
nB
lines contains two integers
lj
and
rj
(
1≤lj≤rj≤1018
), describing a segment of values of set
B
.
Note that segments in both sets may intersect.
Output
Print one integer — the sum of all elements in set
C={x|x=a⊕b,a∈A,b∈B}
modulo
998244353
.
Examples
input
Copy
2
3 5
5 8
3
1 2
1 9
2 9
output
Copy
112
input
Copy
1
1 9
2
2 4
2 10
output
Copy
120
Note
In the second example, we can discover that the set
C={0,1,…,15}
, which means that all numbers between
0
and
15
can be represented as
a⊕b
.