Chef has an array of
N integers
[A
1
,A
2
,…,A
N
]. He wants to perform
M operations; for each
i (
1≤i≤M), the
i-th operation consists of reversing the subarray
[A
l
i
,…,A
r
i
].
Each operation should be applied exactly once. However, Chef does not remember the order in which they should be applied, so he wants to choose a uniformly random permutation of the
M operations and apply them in that order.
Let's denote by
B the resulting array if the operations are unpermuted, i.e. applied in the order
1 through
M. Find the probability that the resulting array (after Chef applies all operations in a random order) is equal to
. Specifically, this probability can be expressed as a fraction
P/Q, where
P and
Q are coprime positive integers; compute
P and
Q.
Input
The first line of the input contains a single integer
T denoting the number of test cases. The description of
T test cases follows.
The first line of each test case contains two space-separated integers
N and
M.
The second line contains
N space-separated integers
A
1
,A
2
,…,A
N
.
M lines follow. For each valid
i, the
i-th of these lines contains two space-separated integers
l
i
and
r
i
.
Output
Print a single line containing two integers
P and
Q, separated by a slash (the character '/').
Constraints
1≤T≤10
1≤N≤10
1≤M≤9
1≤A
i
≤10
9
for each valid
i
1≤l
i
≤r
i
≤N for each valid
i
Subtasks
Subtask #1 (100 points): original constraints
Sample 1:
Input
Output
1
3 3
1 2 1
1 3
1 1
3 3
1/1
Explanation:
Example case 1: Each order of the operations results in the same array
B=[1,2,1].