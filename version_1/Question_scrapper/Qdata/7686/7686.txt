You are given an undirected tree of
N nodes. A positive weight
W
i
is assigned to the node
i for all
1≤i≤N.
For all
1≤j≤N−1, the
j-th edge connects the nodes
u
j
and
v
j
, and has a restriction value of
R
j
.
An array
A
1
,A
2
,⋯,A
N
consisting of
N non-negative integers is called valid if:
For all
1≤j≤N−1, the condition
A
u
j
+A
v
j
≤R
j
holds.
The profit of a valid array
A is defined as
profit(A)=∑
i=1
N
A
i
⋅W
i
Find the maximum possible value of
profit(A) for some valid array
A.
The first line of input contains a single integer
T - the number of test cases. The description of
T test cases follow.
The first line of each test case contains a single integer
N - the number of nodes in the tree.
The second line of each test case contains
N integers
W
1
,W
2
,⋯,W
N
denoting the weights assigned to every node.
The next
N−1 lines contain three space-separated integers each, with the
j-th line containing
u
j
,
v
j
, and
R
j
.
Output Format
For each test case, output the maximum possible value of
profit(A).
Constraints
1≤T≤10
5
3≤N≤10
5
1≤W
i
≤10
9
1≤u
j
,v
j
≤N and
u
j

=v
j
1≤R
j
≤10
9
It is guaranteed that
N⋅max
i=1
N
W
i
⋅max
j=1
N−1
R
j
≤10
18
.
It is guaranteed that the input forms a valid tree for all test cases.
The sum of
N over all test cases do not exceed
10
5
Sample 1:
Input
Output
3
3
6 9 4
1 2 2
2 3 1
6
1 2 2 6 100 100
1 2 9
2 3 17
2 4 3
3 5 1
3 6 4
3
120734269 1000000000 1
1 2 300000000
2 3 300000000
16
527
300000000000000000
Explanation:
Test case-1: All valid arrays
A are:
A=[0,0,0];
profit(A)=0⋅6+0⋅9+0⋅4=0
A=[0,0,1];
profit(A)=0⋅6+0⋅9+1⋅4=4
A=[0,1,0];
profit(A)=0⋅6+1⋅9+0⋅4=9
A=[1,0,1];
profit(A)=1⋅6+0⋅9+1⋅4=10
A=[1,1,0];
profit(A)=1⋅6+1⋅9+0⋅4=15
A=[2,0,1];
profit(A)=2⋅6+0⋅9+1⋅4=16
The maximum profit among all valid arrays
A is
16, which is the answer.
Test case-2: The optimal
A is
[9,0,0,3,1,4].
Test case-3: The optimal
A is
[0,300000000,0].