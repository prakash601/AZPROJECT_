A string is called bracket sequence if it does not contain any characters other than "(" and ")". A bracket sequence is called regular if it it is possible to obtain correct arithmetic expression by inserting characters "+" and "1" into this sequence. For example, "", "(())" and "()()" are regular bracket sequences; "))" and ")((" are bracket sequences (but not regular ones), and "(a)" and "(1)+(1)" are not bracket sequences at all.
You have a number of strings; each string is a bracket sequence of length
2
. So, overall you have
cnt1
strings "((",
cnt2
strings "()",
cnt3
strings ")(" and
cnt4
strings "))". You want to write all these strings in some order, one after another; after that, you will get a long bracket sequence of length
2(cnt1+cnt2+cnt3+cnt4)
. You wonder: is it possible to choose some order of the strings you have such that you will get a regular bracket sequence? Note that you may not remove any characters or strings, and you may not add anything either.
Input
The input consists of four lines,
i
-th of them contains one integer
cnti
(
0≤cnti≤109
).
Output
Print one integer:
1
if it is possible to form a regular bracket sequence by choosing the correct order of the given strings,
0
otherwise.
Examples
input
Copy
3
1
4
3
output
Copy
1
input
Copy
0
0
0
0
output
Copy
1
input
Copy
1
2
3
4
output
Copy
0
Note
In the first example it is possible to construct a string "(())()(()((()()()())))", which is a regular bracket sequence.
In the second example it is possible to construct a string "", which is a regular bracket sequence.