Chef has received a challenge for which he needs your help.
Given
N, find a permutation
P of numbers
(1,2,…,N) such that:
P
i
⊕P
i+1

=P
i+2
 , where (1≤i≤N−2). Here
⊕ denotes the bitwise XOR operation.
If multiple such permutations exist, print any. If no such permutation exists, print
−1.
Note that, a permutation of length
N is a sequence of
N integers
P=(P
1
,P
2
,…,P
N
) such that every integer from
1 to
N (inclusive) appears in it exactly once. For example,
(2,5,4,1,3) is a permutation of length
5 while
(2,5,2,1,3) is not.
Input Format
First line will contain
T, number of test cases. Then the test cases follow.
Each test case contains of a single integer as input,
N - the length of the required permutation.
Output Format
For each test case, output in a new line,
N space-separated integers, denoting a permutation satisfying the condition.
If multiple such permutations exist, print any. If no such permutation exists, print
−1.
Constraints
1≤T≤500
3≤N≤10
5
Sum of
N over all test cases does not exceed
2⋅10
5
.
Sample 1:
Input
Output
4
3
5
10
22
-1
5 1 2 4 3
1 2 4 3 6 10 8 9 7 5
10 9 8 7 6 5 1 2 4 3 11 12 13 14 15 16 17 18 19 20 21 22
Explanation:
Test Case
1: There is no permutation that satisfies the given XOR condition.
Test Case
2:
(5⊕1=4) , (1⊕2=3) , (2⊕4=6)
Since all the adjacent XORs are different from the next term, hence, this is a valid answer.
Test Case
3:
(1⊕2=3) , (2⊕4=6) , (4⊕3=7) and so on... 
Since all the adjacent XORs are different from the next term, hence, this is a valid answer.
Test Case
4:
(10⊕9=3) , (9⊕8=1) , (8⊕7=15) and so on... 
Since all the adjacent XORs are different from the next term, hence, this is a valid answer.