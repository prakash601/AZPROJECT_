This is an easy version of the problem. In this version,
𝑘
is always
3
.
The chief wizard of the Wizengamot once caught the evil wizard Drahyrt, but the evil wizard has returned and wants revenge on the chief wizard. So he stole spell
𝑠
from his student Harry.
The spell — is a
𝑛
-length string of lowercase Latin letters.
Drahyrt wants to replace spell with an unforgivable curse — string
𝑡
.
Drahyrt, using ancient magic, can swap letters at a distance
𝑘
or
𝑘+1
in spell as many times as he wants. In this version of the problem, you can swap letters at a distance of
3
or
4
. In other words, Drahyrt can change letters in positions
𝑖
and
𝑗
in spell
𝑠
if
|𝑖−𝑗|=3
or
|𝑖−𝑗|=4
.
For example, if
𝑠=
"talant" and
𝑡=
"atltna", Drahyrt can act as follows:
swap the letters at positions
1
and
4
to get spell "aaltnt".
swap the letters at positions
2
and
6
to get spell "atltna".
You are given spells
𝑠
and
𝑡
. Can Drahyrt change spell
𝑠
to
𝑡
?
Input
The first line of input gives a single integer
𝑇
(
1≤𝑇≤
10
4
) — the number of test cases in the test.
Descriptions of the test cases are follow.
The first line contains two integers
𝑛,𝑘
(
1≤𝑛≤2⋅
10
5
,
𝑘=3
) — the length spells and the number
𝑘
such that Drahyrt can change letters in a spell at a distance
𝑘
or
𝑘+1
.
The second line gives spell
𝑠
 — a string of length
𝑛
consisting of lowercase Latin letters.
The third line gives spell
𝑡
 — a string of length
𝑛
consisting of lowercase Latin letters.
It is guaranteed that the sum of
𝑛
values over all test cases does not exceed
2⋅
10
5
. Note that there is no limit on the sum of
𝑘
values over all test cases.
Output
For each test case, output on a separate line "YES" if Drahyrt can change spell
𝑠
to
𝑡
and "NO" otherwise.
You can output the answer in any case (for example, lines "yEs", "yes", "Yes" and "YES" will be recognized as positive answer).
Example
input
Copy
7
6 3
talant
atltna
7 3
abacaba
aaaabbc
12 3
abracadabraa
avadakedavra
5 3
accio
cicao
5 3
lumos
molus
4 3
uwjt
twju
4 3
kvpx
vxpk
output
Copy
YES
YES
NO
YES
NO
YES
NO
Note
The first example is explained in the condition.
In the second example we can proceed as follows:
Swap the letters at positions
2
and
5
(distance
3
), then we get the spell "aaacbba".
Swap the letters at positions
4
and
7
(distance
3
), then you get the spell "aaaabbc".
In the third example, we can show that it is impossible to get the string
𝑡
from the string
𝑠
by swapping the letters at a distance of
3
or
4
.
In the fourth example, for example, the following sequence of transformations is appropriate:
"accio"
→
"aocic"
→
"cocia"
→
"iocca"
→
"aocci"
→
"aicco"
→
"cicao"
In the fifth example, you can show that it is impossible to get the string
𝑠
from the string
𝑡
.
In the sixth example, it is enough to swap the two outermost letters.