You are given a binary string
S. You can perform the following operations on
S:
Flip: Pick an index
i
(1≤i≤∣S∣) and flip the
i-th character (i.e change
1 to
0 or
0 to
1). For e.g.
01
1
001→01
0
001
Compress: Pick any non-empty substring consisting of the same character and replace it with a single occurrence of that character. For e.g.
100
1111
10→100
1
10
You want to make all the characters of the binary string equal (i.e. either all characters are
0 or all characters are
1). Find the minimum number of operations required to do so.
Input Format
The first line of input contains a single integer
T, denoting the number of test cases. The description of
T test cases follows.
The first and only line of each test case contains a binary string
S.
Output Format
For each test case, output a single line containing one integer - the minimum number of operations required to make all the characters of
S equal.
Constraints
1≤T≤10
5
1≤∣S∣≤10
6
S is a binary string.
It is guaranteed that the sum of
∣S∣ over all test cases does not exceed
10
6
.
Subtasks
Subtask #1 (5 points):
1≤T≤10
3
1≤∣S∣≤10
Subtask #2 (20 points):
1≤T≤10
3
1≤∣S∣≤50
Subtask #3 (75 points):
Original constraints
Sample 1:
Input
Output
3
100011
1110011
000101110
2
2
3
Explanation:
In the first test case,
1
000
11
compress
1
0
11
1
0
11
flip
1
1
11
In the second test case,
111
0
011
flip
111
1
011
1111
0
11
flip
1111
1
11
In the third test case,
0001
0
1110
flip
0001
1
1110
000
11111
0
compress
000
1
0
000
1
0
flip
000
0
0