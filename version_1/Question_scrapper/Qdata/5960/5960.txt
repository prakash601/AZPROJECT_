Chef has an array
A of size
N such that
1≤A
i
≤K for all
1≤i≤N.
Chef also has another array
B of size
M such that
1≤B
i
≤K for all
1≤i≤M
Chef can perform the following operation:
1) Select an integer
X such that
1≤X≤K
2) Append
X to the end of exactly one array among
A and
B
Find the minimum number of operations required to make
mean(A) strictly greater than
mean(B) or determine it is not possible to do so.
For an array
X of length
M,
mean(X) is defined as
M
ΣX
i
. For example,
mean([5,6])=
2
5+6
=5.5
mean([10,13,20])=
10+13+20
=14.333...
mean([3,3,3,3,3])=3
Input Format
The first line of input will contain a single integer
T, denoting the number of test cases.
Each test case consists of multiple lines of input.
The first line of each test case contains three space-separated integers
N,
M and
K - the size of array
A, the size of array
B and the upper bound of values in arrays
A and
B.
The next line contains
N space-separated integers
A
1
,
A
2
, ...,
A
N
denoting the array
A.
The third line contains
M space-separated integers
B
1
,
B
2
, ...,
B
M
denoting the array
B.
Output Format
For each test case, output the minimum number of operations required to make
mean(A)>mean(B).
Output
−1 if it is not possible to do so.
Constraints
1≤T≤10
4
1≤N,M≤10
5
1≤K≤10
6
1≤A
i
,B
i
≤K
Sum of
N over all test cases won't exceed
10
5
.
Sum of
M over all test cases won't exceed
10
5
.
Sample 1:
Input
Output
4
6 3 9
3 7 3 5 2 4
8 3 5
1 1 4
4
2
2 2 1
1 1
1 1
5 5 5
3 4 3 4 3
4 5 4 5 4
2
0
-1
3
Explanation:
Test case 1:
A=[3,7,3,5,2,4] and
B=[8,3,5]. Chef can perform the following operations:
Append
X=8 to array
A
Append
X=2 to array
B
After that,
mean(A)=
7
3+7+3+5+2+4+8
=4.5714... and
mean(B)=
4
8+3+5+2
=4.5
Test case 2: There is no need to append new elements as
mean(A)=4>2=mean(B).
Test case 3: As
K=1, it is impossible to make
mean(A)>mean(B) as
mean(A)=mean(B)=1 no matter how many operations Chef performs.
Test case 4: Chef can append
2,
1 and
2 to array
B in three operations.