You are given an unweighted tree with
N nodes (numbered
1 through
N). Let's denote the distance between any two nodes
p and
q by
d(p,q).
You should answer
Q queries. In each query, you are given parameters
a,
d
a
,
b,
d
b
, and you should find a node
x such that
d(x,a)=d
a
and
d(x,b)=d
b
, or determine that there is no such node.
Input
The first line of the input contains a single integer
T denoting the number of test cases. The description of
T test cases follows.
The first line of each test case contains two space-separated integers
N and
Q.
Each of the next
N−1 lines contains two space-separated integers
u and
v denoting that nodes
u and
v are connected by an edge.
Each of the next
Q lines contains four space-separated integers
a,
d
a
,
b and
d
b
describing a query.
Output
For each query, print a single line containing one integer ― the number of a node satisfying the given requirements, or
−1 if no such node exists.
If there are multiple solutions, you may output any one.
Constraints
1≤T≤1,000
1≤N,Q≤10
6
1≤u,v≤N
the graph on the input is a tree
1≤a,b≤N
1≤d
a
,d
b
<N
the sum of
N over all test cases does not exceed
10
6
the sum of
Q over all test cases does not exceed
10
6
Subtasks
Subtask #1 (50 points):
1≤N,Q≤1,000
the sum of
N over all test cases does not exceed
1,000
the sum of
Q over all test cases does not exceed
1,000
Subtask #2 (50 points): original constraints
Sample 1:
Input
Output
1
5 3
1 2
2 3
3 4
3 5
2 1 4 1
2 2 4 2
1 1 2 1
3
5
-1