You are given a small graph
G
s
with
N nodes (numbered
1 through
N) and
M edges.
Let's create a big graph
G
b
with
NK nodes (numbered
1 through
NK) and
MK edges.
G
b
consists of
K copies of
G
s
― formally, for each
k (
0≤k≤K−1) and each edge between nodes
u and
v in
G
s
, there is an edge between nodes
u+kN and
v+kN in
G
b
.
Afterwards, let's take the complement of
G
b
and call it
H ― formally,
H is a graph with
NK nodes (numbered
1 through
NK) such that for each pair of nodes, there is an edge between these two nodes in
H if and only if there is no edge between these two nodes in
G
b
.
Count the number of spanning trees in
H. Since this number could be very large, compute it modulo
998,244,353.
Input
The first line of the input contains a single integer
T denoting the number of test cases. The description of
T test cases follows.
The first line of each test case contains three space-separated integers
N,
M and
K.
Each of the next
M lines contains two space-separated integers
a and
b denoting that the nodes
a and
b in
G
s
are connected by an edge.
Output
For each test case, print a single line containing one integer ― the number of spanning trees in
H modulo
998,244,353.
Constraints
1≤T≤20
1≤N≤30
0≤M≤N(N−1)/2
1≤K≤10
8
1≤a,b≤N
G
s
does not contain any self-loops or multi-edges
Subtasks
Subtask #1 (15 points):
K≤10
Subtask #2 (19 points):
K≤50
M≤5
Subtask #3 (21 points):
K≤5,000
M=N(N−1)/2
Subtask #4 (22 points):
K≤5,000
Subtask #5 (23 points): original constraints
Sample 1:
Input
Output
5
3 0 1
3 3 2
1 2
1 3
2 3
3 3 1
1 2
1 3
2 3
6 9 20
1 3
2 3
4 3
5 3
6 3
1 4
2 4
4 5
4 6
30 4 5000
1 2
3 4
5 6
6 7
3
81
0
13872131
797280964
Explanation:
Example case 1:
H is the complete graph on three nodes, so the number of spanning trees is
3 (any two of the edges form a spanning tree).