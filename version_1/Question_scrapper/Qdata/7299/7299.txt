You have to process
Q queries on a rooted tree. Each node of the tree has a label and a color. Initially, the tree consists of a single node (the root) with label
1 and color
c
0
. There are two types of queries:
You are given an existing node
u and a color
c. Let's denote the number of nodes in the tree before this query by
k. Create a node with label
k+1 and color
c, and add it to the tree as a child of node
u.
You are given a node
u and a color
c. For each node with color
c (possibly including
u), find its distance from node
u. The answer to this query is the minimum of these distances, or
−1 if there are no nodes with color
c in the tree.
The input is encoded so that you have to process these queries online.
Input
The first line of the input contains a single integer
T denoting the number of test cases. The description of
T test cases follows.
The first line of each test case contains two space-separated integers
Q and
c
0
.
Each of the following
Q lines contains a character
t followed by a space and two space-separated integers
u
′
and
c
′
describing a query.
The character
t is '+' for a query of the first type or '?' for a query of the second type.
Let's denote the answer to the last query of the second type by
a (
a=−1 if there have been no queries of the second type so far). The parameters
u and
c of the current query can be computed as
u=u
′
⊕(a+1) and
c=c
′
⊕(a+1).
Output
For each query of the second type, print a single line containing one integer — the answer to this query.
Constraints
1≤Q≤2⋅10
5
the sum of
Q over all test cases does not exceed
4⋅10
5
t is '+' or '?'
u is a valid label of a node in the tree
1≤c
0
,c≤2⋅10
5
Sample 1:
Input
Output
2
6 1
+ 1 2
+ 2 3
+ 3 1
? 1 3
? 7 2
? 3 0
10 1
+ 1 2
? 1 1
? 3 0
? 0 6
+ 2 3
+ 2 4
? 3 4
+ 0 7
? 0 7
? 3 6
2
0
1
0
1
-1
2
1
2
Explanation:
Example case 1: The decoded queries are
+ 1 2
+ 2 3
+ 3 1
? 1 3
? 4 1
? 2 1
Example case 2: The decoded queries are
+ 1 2
? 1 1
? 2 1
? 2 4
+ 2 3
+ 2 4
? 3 4
+ 3 4
? 3 4
? 1 4