You are given a grid with
2 rows and
N columns containing distinct integers. The number in the
i-th row and
j-th column is denoted by
A
i,j
. In one operation, you can swap numbers in any two cells which share a side.
For a binary string
S of length
N, let's define
f(S) as follows:
f(S) is the smallest number of swaps required to achieve a state of board in which
A
1,i
<A
2,i
if
S
i
=1, and
A
1,i
>A
2,i
if
S
i
=0, for each
i from
1 to
N.
It's easy to show that it's possible to achieve any state of the board by swapping adjacent elements, so
f(S) is always defined.
Find the sum of
f(S) over all
2
N
binary strings
S of length
N.
Input Format
The first line of the input contains a single integer
T, the number of test cases. The description of the test cases follows.
The first line of each test case contains a single integer
N.
Then two lines follow, the
i-th line contains
N space-separated integers
A
i,1
,A
i,2
,…,A
i,N
.
Output Format
For each test case, output a single integer — the sum of
f(S) over all binary strings
S of length
N.
Constraints
1≤T≤20
1≤N≤50
1≤A
i,j
≤2⋅N
All
A
i,j
are distinct.
The sum of
N over all test cases doesn't exceed
100.
Sample 1:
Input
Output
3
3
1 2 3
4 5 6
4
3 6 1 7
4 2 8 5
5
1 4 5 8 9
2 3 6 7 10
12
30
57
Explanation:
Test case
1: The minimum numbers of operations are
0 for
S= 000,
1 for
S= 100, 010, 001,
2 for 110, 101, 011,
3 for 111, so the sum of answers is
0⋅1+1⋅3+2⋅3+3⋅1=12.