Let's call a directed graph egg-free if it is acyclic and for any three pairwise distinct vertices
x,
y and
z, if the graph contains edges
x→y and
x→z, then it also contains an edge
y→z and/or an edge
z→y.
You are given an undirected graph with
N vertices (numbered
1 through
N) and
M edges (numbered
1 through
M). Find a way to assign a direction to each of its edges such that the resulting directed graph is egg-free, or determine that it is impossible. If there are multiple solutions, you may find any one.
The first line of the input contains a single integer
T denoting the number of test cases. The description of
T test cases follows.
The first line of each test case contains two space-separated integers
N and
M.
M lines follow. For each valid
i, the
i-th of these lines contains two space-separated integers
u
i
and
v
i
denoting an edge between vertices
u
i
and
v
i
.
Output
For each test case:
If it is impossible to assign a direction to each edge in such a way that the resulting graph is egg-free, print a single line containing the string "No solution" (without quotes).
Otherwise, print a single line containing a string with length
M. For each valid
i, the
i-th character of this string should be '^' if you want to direct the
i-th edge from
u
i
to
v
i
, or 'v' if you want to direct it from
v
i
to
u
i
.
Constraints
1≤T≤5
1≤N,M≤200,000
1≤u
i
,v
i
≤N for each valid
i
u
i

=v
i
for each valid
i
each pair of vertices is connected by at most one edge
Subtasks
Subtask #1 (10 points):
N,M≤20
Subtask #2 (20 points):
N,M≤200
Subtask #3 (70 points): original constraints
Sample 1:
Input
Output
2
3 3
1 2
2 3
3 1
7 6
1 2
2 3
3 4
4 5
5 6
6 7
^^v
^^^^^^