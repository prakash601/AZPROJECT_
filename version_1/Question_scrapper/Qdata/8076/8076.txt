You are given a permutation
†
𝑝
of length
𝑛
.
In one operation, you can choose two indices
1≤𝑖<𝑗≤𝑛
and swap
𝑝
𝑖
with
𝑝
𝑗
.
Find the minimum number of operations needed to have exactly one inversion
‡
in the permutation.
†
A permutation is an array consisting of
𝑛
distinct integers from
1
to
𝑛
in arbitrary order. For example,
[2,3,1,5,4]
is a permutation, but
[1,2,2]
is not a permutation (
2
appears twice in the array), and
[1,3,4]
is also not a permutation (
𝑛=3
but there is
4
in the array).
‡
The number of inversions of a permutation
𝑝
is the number of pairs of indices
(𝑖,𝑗)
such that
1≤𝑖<𝑗≤𝑛
and
𝑝
𝑖
>
𝑝
𝑗
.
Input
The first line contains a single integer
𝑡
(
1≤𝑡≤
10
4
) — the number of test cases. The description of test cases follows.
The first line of each test case contains a single integer
𝑛
(
2≤𝑛≤2⋅
10
5
).
The second line of each test case contains
𝑛
integers
𝑝
1
,
𝑝
2
,…,
𝑝
𝑛
(
1≤
𝑝
𝑖
≤𝑛
). It is guaranteed that
𝑝
is a permutation.
It is guaranteed that the sum of
𝑛
over all test cases does not exceed
2⋅
10
5
.
Output
For each test case output a single integer — the minimum number of operations needed to have exactly one inversion in the permutation. It can be proven that an answer always exists.
Example
input
Copy
4
2
2 1
2
1 2
4
3 4 1 2
4
2 4 3 1
output
Copy
0
1
3
1
Note
In the first test case, the permutation already satisfies the condition.
In the second test case, you can perform the operation with
(𝑖,𝑗)=(1,2)
, after that the permutation will be
[2,1]
which has exactly one inversion.
In the third test case, it is not possible to satisfy the condition with less than
3
operations. However, if we perform
3
operations with
(𝑖,𝑗)
being
(1,3)
,
(2,4)
, and
(3,4)
in that order, the final permutation will be
[1,2,4,3]
which has exactly one inversion.
In the fourth test case, you can perform the operation with
(𝑖,𝑗)=(2,4)
, after that the permutation will be
[2,1,3,4]
which has exactly one inversion.